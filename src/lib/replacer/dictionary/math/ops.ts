import {
    aliasName,
    ascii,
    named,
    namespace,
    namespaceRef,
    not
} from "../../registered"

export const ops = namespace("math", [
    ascii("≥", "{>=}", ["greater:equal", "geq"]).also_not("≱", "{!>=}"),
    ascii("≱", "{!>=}", not("greater:equal", "geq")),
    ascii("≤", "{<=}", ["lesser:equal", "leq"]),
    ascii("≰", "{!<=}", not("lesser:equal", "leq")),
    ascii("≲", "{~<}", ["lesser:tilde", "lsr:tilde"]),
    ascii("≴", "{!~<}", not("lesser:tilde", "lsr:tilde")),
    ascii("⩾", "{>_}", ["greater:equal:slant", "geq:slant"]),
    ascii("⩽", "{_<}", ["lesser:equal:slant", "leq:slant"]),
    ascii("≺", "{:<}", ["precedes", "prec"]),
    ascii("≻", "{:>}", ["succeeds", "succ"]),
    ascii("≼", "{:=<}", ["precedes:equal", "prec:eq"]),
    ascii("≽", "{:=>}", ["succeeds:equal", "succ:eq"]),
    ascii("≠", "{!=}", not("equal", "eq")),
    ascii("≡", "{==}", ["3:equal", "3eq"]),
    ascii("≢", "{!==}", not("3:equal", "3eq")),
    ascii("≁", "{!~}", not("tilde")),
    ascii("≈", "{~~}", ["2:tilde"]),
    ascii("≉", "{!~~}", not("2:tilde")),
    ascii("≊", "{~~~}", ["3:tilde"]),
    ascii("≋", "{!~~~}", not("3:tilde")),
    ascii("≃", "{=~}", ["tilde:line"]),
    ascii("≅", "{==~}", ["tilde:equal"]),

    ascii("≫", "{>>}", ["greater:2", "ggtr"]),
    ascii("⋙", "{>>>}", ["greater:3", "gggtr"]),
    ascii("≪", "{<<}", ["lesser:2", "llsr"]),
    ascii("⋘", "{<<<}", ["lesser:3", "lllsr"]),
    ascii("<_>", "{≶}", ["lesser:greater", "lsr:gtr"]),
    ascii("!<_>", "{≸}", not("lesser:greater:not")),

    ascii("±", "{+-}", ["plusminus", "plusminus"]),
    ascii("∓", "{-+}", ["minusplus", "minusplus"]),
    named("⨉", ["times", "x"]),
    named("∙", ["cdot", "*"]),
    ascii("√", "{|/}", ["root", "sqrt"]),
    ascii("∛", "{|3/}", ["root:3", "cbrpt"]),
    ascii("∜", "{|4/}", ["root:4", "qrrt"]),

    ascii("÷", "{-:-}", ["division", "div"]),
    named("∑", ["sum", "sigma"]),
    named("∏", ["product", "prod", "pi"]),
    namespace("int|integral", [
        named("∫", ["", "1"]),
        named("∬", ["2"]),
        named("∭", ["3"]),
        named("⨌", ["4"]),
        named("∱", ["cw"]),
        namespace("closed|contour|o", [
            named("∮", [""]),
            named("∯", ["2", "2d"]),
            named("∰", ["3", "3d"]),
            named("∲", ["cw"]),
            named("∳", ["ccw"])
        ]),
        aliasName("closed:2", ["surface"]),
        aliasName("closed:3", ["volume"])
    ]),
    namespaceRef("integral:closed", ["oint"]),
    named("∂", ["partial", "pd"]),
    named("∇", ["nabla", "nabla", "del"]),
    named("∆", ["laplacian", "diff"]),
    ascii("∘", "{o}", ["ring", "circle", "circ", "compose"]),

    ascii("∖", "{-S}", ["set:minus"]),
    ascii("∩", "{&S}", ["cap", "intersection", "inter"]),
    ascii("∪", "{|S}", ["union", "cup", "cup"]),
    ascii("⋂", "{&&S}", ["cap:big", "intersection:big", "inter:big"]),
    ascii("⋃", "{||S}", ["union:big", "cup:big"]),
    ascii("∧", "{&L}", ["and", "land"]),
    ascii("⋀", "{&&L}", ["and:big", "land:big"]),
    ascii("∨", "{|L}", ["or", "lor"]),
    ascii("⋁", "{||L}", ["or:big", "lor:big"]),
    ascii("¬", "{!L}", ["not", "lnot"]),
    ascii("∀", "{A}", ["forall"]),
    ascii("∃", "{E}", ["exists"]),
    ascii("∄", "{!E}", ["exists:not", "nexists"]),
    ascii("∈", "{e}", ["in"]),
    ascii("∉", "{!e}", ["in:not", "nin"]),
    ascii("⊂", "{<s}", ["subset", "sub"]),
    ascii("⊃", "{>s}", ["superset", "sup"]),
    ascii("⊆", "{<=s}", ["subset:equal", "subeq"]),
    ascii("⊇", "{>=s}", ["superset:equal", "supeq"]),
    ascii("⊄", "{!<s}", not("subset", "sub")),
    ascii("⊅", "{!>s}", not("superset", "sup")),
    ascii("⊈", "{!<=s}", not("subset:equal", "subeq")),
    ascii("⊉", "{!>=s}", not("superset:equal", "supeq")),
    named("⊊", ["subset:proper", "psub"]),
    named("⊋", ["superset:proper", "psup"]),
    ascii("∞", "{oo}", ["infinity", "infty"]),
    ascii("∅", "{0}", ["empty", "emptyset", "nullset"]),
    ascii("⊕", "{(+)}", ["circ:plus", "oplus"]),
    ascii("⊖", "{(-)}", ["circ:minus", "ominus"]),
    ascii("⊗", "{(x)}", ["circ:times", "otimes"]),
    ascii("⊙", "{(.)}", ["circ:dot", "odot"]),
    ascii("⨸", "{(:)}", ["circ:colon", "ocolon"]),
    ascii("⊘", "{(/)}", ["circ:slash", "oslash"]),
    ascii("⊛", "{(*)}", ["circ:ast", "oast"]),
    ascii("⊚", "{(o)}", ["circ:circ", "ocirc"]),
    ascii("⊜", "{(=)}", ["circ:equal", "oeq"]),
    ascii("⨀", "{((.))}}", ["circ:dot:big", "odot:big"]),
    ascii("⨁", "{((+))}", ["circ:plus:big", "oplus:big"]),
    ascii("⨂", "{((x))}", ["circ:times:big", "otimes:big"]),
    ascii("∎", "{[!]}", ["proof:end", "qed", "tombstone", "tstone"]),
    ascii("∴", "{:.}", ["therefore"]),
    ascii("∵", "{.:}", ["because"]),
    ascii("∝", "{o<}", ["proportional", "prop"]),
    named("∥", ["parallel", "par"]),
    named("∦", ["parallel:not", "par:not"]),
    named("⊥", ["perpendicular", "perp"]),
    // TODO: add tautology, contradiction
    ascii("⊨", "{|=}", ["models", "vDash"]),
    ascii("⊭", "{!|=}", not("models", "vDash")),

    ascii("⊩", "{||-}", ["forces", "Vdash"]),
    ascii("⊯", "{!||-}", not("forces", "Vdash")),
    ascii("⊢", "{|-}", ["proves", "turnstile", "ts", "vdash", "tack:right"]),
    ascii(
        "⊬",
        "{!|-}",
        not("proves", "turnstile", "ts", "vdash", "tack:right")
    ),
    ascii("⊣", "{-|}", ["proven", "turnstile:rev", "dashv", "tack:left"]),

    named("∠", ["angle"]),
    named("∟", ["angle:right"]),
    named("∣", ["divides", "divs"]),
    named("∤", not("divides", "divs")),
    ascii("⩮", "{=*}", ["equal:star"]),
    ascii("≐", "{=.}", ["equal:dot"]),
    ascii("≑", "{.=.}", ["equal:dot:2"]),
    ascii("≔", "{:=}", ["equal:colon"]),
    ascii("≕", "{=:}", ["equal:colon:rev"]),
    named("≝", ["equal:def"]),
    ascii("≟", "{=?}", ["equal:question"])
])
